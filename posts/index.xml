<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Mia&#39;s Blog Posts</title>
    <link>https://Mia-zhao.github.io/blog/posts/</link>
    <description>Recent content in Posts on Mia&#39;s Blog Posts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Thu, 06 Aug 2020 08:59:00 +0000</lastBuildDate>
    
	<atom:link href="https://Mia-zhao.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSS 知识总结2</title>
      <link>https://Mia-zhao.github.io/blog/posts/css-%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%932/</link>
      <pubDate>Thu, 06 Aug 2020 08:59:00 +0000</pubDate>
      
      <guid>https://Mia-zhao.github.io/blog/posts/css-%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%932/</guid>
      <description>这篇博文主要为了个人学习目的，内容包括CSS定位，层叠上下文，浏览器渲染原理以及动画 (transition, animation)。
1 定位 文档流和盒模型讨论的是二维平面的布局，定位讨论的是垂直于平面的z-axis布局。从上到下（或者人眼俯视屏幕的方向）分别是：
 内联子元素 浮动元素 块级子元素 边框 背景  position的默认值是static, 其余值有：
 relative: 配合absolute/z-index使用 absolute: 相对于祖先中最近一个定位元素（非static）定位  有些浏览器若没有top left会错乱 注意善用百分值和负margin定位   fixed: 相对于viewport  特殊属性除外（transform）   sticky: 不常用  2 层叠上下文 元素在z轴的顺序由z-index影响，然而不是由z-index的值决定，应在层叠上下文(stacking context)中考虑。 一下是常见层叠上下文的形成：
 根元素html position为absolute或relative并且z-index值不为auto opacity小于1 position为fixed或sticky transform不为none  注：参考 stacking context
考虑层叠上下文时注意：
 每个层叠上下文是新的context 处在同一context才能比较  3 浏览器渲染原理 3.1 渲染步骤 浏览器渲染分为六个步骤：
 构建DOM 构建CCSOM 合并成渲染树(render-tree) layout paint composite  注：参考 https://csstriggers.com了解CSS特性触发的浏览器渲染过程</description>
    </item>
    
    <item>
      <title>CSS 知识总结1</title>
      <link>https://Mia-zhao.github.io/blog/posts/css-%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%931/</link>
      <pubDate>Thu, 06 Aug 2020 07:40:00 +0000</pubDate>
      
      <guid>https://Mia-zhao.github.io/blog/posts/css-%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%931/</guid>
      <description>这篇博文主要为了个人学习目的，内容包括CSS基础知识，重要概念（文档流normal flow和盒模型box model）以及布局 (float, flex, grid) 。
1 基础知识 CSS由Håkon Wium Lie 发明，CCS2.1是目前使用最广泛的版本，CSS3开始分模块更新版本。caniuse.com可以用来参考不同浏览器对CSS特性的支持。
1.1 语法  选择器 { 属性名: 属性值; /*注释*/ }， 举例：  img {max-width: 100%;} @语法  @charset &amp;quot;UTF-8&amp;quot;;@import url(example.css);@media (min-width: 100px) and (max-width: 200px) {}1.2 资料  MDN CCS tricks 张鑫旭的博客  2 重要概念 2.1 文档流 normal flow 在默认布局下，文档流可以是左到右或是上到下。例如，span元素是默认合并的(inline), div元素是默认占一行不合并的(block): 除此以外，inline元素不能指定width/height, 元素的高度由line-height间接确定。block元素可以指定width/height,元素高度由内部文档流元素决定。
注：文档流元素是指处于文档流的元素，position: [absolute|fixed] 以及 float会使元素脱离文档流。
除了inline和block, 还可以通过display: inline-block;设置元素为inline-block。inline-block兼顾inline和block两者的特点，宽度流动与inline一致，高度流动与block一致，可以通过width/height设置宽高。
注意：
 block默认width的值是auto而非100% 不要用设置width为100% inline元素不能包含block元素  2.</description>
    </item>
    
    <item>
      <title>HTML Practice</title>
      <link>https://Mia-zhao.github.io/blog/posts/html-practice/</link>
      <pubDate>Tue, 04 Aug 2020 13:00:00 +0000</pubDate>
      
      <guid>https://Mia-zhao.github.io/blog/posts/html-practice/</guid>
      <description>这篇博文主要为了个人学习目的。
HTML实践练习作业
Tips meta viewport &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no&amp;quot;&amp;gt;
VSCode快捷键（快速生成list等）  选中多行内容 ctrl + shift + p emmet wrap ul&amp;gt;li*  图片大小兼容手机 &amp;lt;style&amp;gt;img {max-width: 100%;}&amp;lt;/style&amp;gt;Chrome远程调试 Remote Debugging
 Enable USB debugging on phone Navigate to chrome://inspect/#devices on PC  </description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>https://Mia-zhao.github.io/blog/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Mon, 03 Aug 2020 13:00:00 +0000</pubDate>
      
      <guid>https://Mia-zhao.github.io/blog/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>这篇博文主要为了个人学习目的。此篇总结了HTML常用标签:
 a img table form  注意：应用网址浏览方式打开html文件，例如：利用工具http-server,parcel,etc.
1. &amp;lt;a&amp;gt;标签 作用 又称anchor (锚)，用于创建超链接。按功能分，可以通向：
 同页面的其他元素 其他网页 文件 JavaScript 电子邮件/电话  以上功能通过元素的href属性达成，例如：
&amp;lt;!-- example 1 链接通向同页面的id=&amp;quot;hey&amp;quot;的p元素 --&amp;gt;&amp;lt;p id=&amp;quot;hey&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;#hey&amp;quot;&amp;gt;example 1&amp;lt;/a&amp;gt;&amp;lt;!-- example 2 链接通向无协议的google.com, https://google.com或者http://google.com也是合法值--&amp;gt;&amp;lt;a href=&amp;quot;//google.com&amp;quot;&amp;gt;example 2&amp;lt;/a&amp;gt;&amp;lt;!-- example 3 链接通向文件路径, &amp;quot;subdir1/subdir2&amp;quot;等效，也可以是&amp;quot;index.html&amp;quot;, &amp;quot;./index.html&amp;quot;等效 --&amp;gt;&amp;lt;a href=&amp;quot;/subdir1/subdir2&amp;quot;&amp;gt;example 3&amp;lt;/a&amp;gt;&amp;lt;!-- example 4 链接运行javascript代码&amp;lt;code&amp;gt;部分，如果是空则什么都不做 (不需要刷新的时候用) --&amp;gt;&amp;lt;a href=&amp;quot;javascript:&amp;lt;code&amp;gt;;&amp;quot;&amp;gt;example 4&amp;lt;/a&amp;gt;&amp;lt;!-- example 5 链接发送邮件，&amp;quot;tel:110&amp;quot;则拨电话 --&amp;gt;&amp;lt;a href=&amp;quot;mailto:abc@example.com&amp;quot;&amp;gt;example 5&amp;lt;/a&amp;gt;target属性 默认值是_self, 表明链接在&amp;lt;a&amp;gt;所在窗口打开。其他值包括：
 _blank: 在新窗口打开，在新tab或是window打开取决于浏览器设置 _parent: 在&amp;lt;a&amp;gt;的父级元素环境打开，若无父级元素，效果等同_self _top: 在&amp;lt;a&amp;gt;的最高祖先级元素环境打开，若无，则等同_self &amp;quot;some_value&amp;quot;: 任意String。若&amp;quot;some_value&amp;quot;窗口已存在，则在其窗口打开；否则新建一个&amp;quot;some_value&amp;quot;窗口并在此打开链接  download属性 指示浏览器下载，可以有值或者没有值：</description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>https://Mia-zhao.github.io/blog/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Sun, 02 Aug 2020 22:08:23 +0800</pubDate>
      
      <guid>https://Mia-zhao.github.io/blog/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      <description>这篇博文主要为了个人学习目的。主要总结了关于HTML的一些基础知识，包括HTML的发明，起手式，常用章节标签，全局属性，常用内容标签等。
HTML的起源 HTML的发明者是Tim Berners-Lee。HTML作为W3(World Wide Web)三大技术构成之一，被用来呈现文本，与其他两项技术(分别是URI和HTTP)一起使网页的分享互联成为可能。
HTML的起手 HTML并非唯一的Markup Language，为了确保浏览器照最佳规范进行渲染，HTML文本需要在第一行标明HTML的文件类型：
&amp;lt;!DOCTYPE html&amp;gt; 虽然MDN的补充阅读提到这行标注是case insensitive，MDN的官方HTML指南写到&amp;lt;!DOCTYPE html&amp;gt;应该被使用。
另外，html标签的lang属性被用来设置文本语言。例如，
&amp;lt;html lang=&amp;quot;en-US&amp;quot;&amp;gt; &amp;lt;!-- 表示英文(美国) --&amp;gt; &amp;lt;html lang=&amp;quot;zh-CN&amp;quot;&amp;gt; &amp;lt;!-- 表示中文(中国) --&amp;gt; 此外，字符编码方式是必须的：
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt; 值得注意的是编码方式应在文本head块以内，并且要尽可能靠前。 最后，为了让内容与移动设备更兼容，需加上meta标签的viewport：
&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width&amp;quot;&amp;gt; 在Visual Studio Code里，有一个快速方式开始HTML的模范，新建一个html文档并在第一行写下!，出现Emmet Abbreviation后回车： 以下是自动生成的HTML的起手：
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 常用章节标签    标签 含义     h1~h6 标题，h1~h6有不同默认字体格式   section 章节   p 段落   header 头部   footer 脚部   main 主要内容   aside 次要内容   div 划分    以下是一个例子： 全局属性  class  用于给标签定义class 一个标签可以有多个class 多个标签可以是同一个class *，.</description>
    </item>
    
  </channel>
</rss>