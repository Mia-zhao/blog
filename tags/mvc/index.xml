<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MVC on Mia&#39;s Blog Posts</title>
    <link>https://Mia-zhao.github.io/blog/tags/mvc/</link>
    <description>Recent content in MVC on Mia&#39;s Blog Posts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Fri, 21 Aug 2020 15:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://Mia-zhao.github.io/blog/tags/mvc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>浅析 MVC</title>
      <link>https://Mia-zhao.github.io/blog/%E6%B5%85%E6%9E%90-mvc/</link>
      <pubDate>Fri, 21 Aug 2020 15:00:00 +0000</pubDate>
      
      <guid>https://Mia-zhao.github.io/blog/%E6%B5%85%E6%9E%90-mvc/</guid>
      <description>MVC MVC代表Model, View, Controller, 是一种设计模式, 其中, Model负责处理数据, View处理视图UI等, Controller控制器负责其他。下图是MVC模型的示意图: 考虑如下伪代码:
// Model (处理数据)class Model {constructor(options) {// handle parameter options}get() {}create() {}delte() {}update() {}}// View (处理视图)class View {constructor(options) {// handle parameter options}init() {}render() {}}// Controller (控制器)class Controller {constructor(options) {handle parameter options}init() {}autoBindEvents() {}}MVC职责分工有时并不明确，可以将VC合并为一类处理。在重构过程中，值得注意的是解耦(decoupling)思想，降低模块间依赖性。
EventBus EventBus可以用来处理模块间通信，中心思想是利用事件登记和处理模式来解耦不同模块。EventBus需要有on, trigger, off功能的函数来保证通信。一个结构可以响应另一个结构触发的事件并且结构之间没有直接依赖。以下是伪代码示例:</description>
    </item>
    
  </channel>
</rss>